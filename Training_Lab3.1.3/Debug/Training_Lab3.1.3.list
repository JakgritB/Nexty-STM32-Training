
Training_Lab3.1.3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006c8  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000860  08000868  00001868  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000860  08000860  00001868  2**0
                  CONTENTS
  4 .ARM          00000000  08000860  08000860  00001868  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000860  08000868  00001868  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000860  08000860  00001860  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000864  08000864  00001864  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001868  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000868  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000868  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001868  2**0
                  CONTENTS, READONLY
 12 .debug_info   000003cb  00000000  00000000  00001898  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000111  00000000  00000000  00001c63  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00001d78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000033  00000000  00000000  00001dc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000dfde  00000000  00000000  00001dfb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000089f  00000000  00000000  0000fdd9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00050bf3  00000000  00000000  00010678  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0006126b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000084  00000000  00000000  000612b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000045  00000000  00000000  00061334  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000848 	.word	0x08000848

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	08000848 	.word	0x08000848

080001d8 <vdg_UART_RxByte>:
#include <stdint.h>
#define STM32F411xE
#include "stm32f4xx.h"

char vdg_UART_RxByte() {
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
	while ((USART2->SR & USART_SR_RXNE) == 0)
 80001de:	bf00      	nop
 80001e0:	4b07      	ldr	r3, [pc, #28]	@ (8000200 <vdg_UART_RxByte+0x28>)
 80001e2:	681b      	ldr	r3, [r3, #0]
 80001e4:	f003 0320 	and.w	r3, r3, #32
 80001e8:	2b00      	cmp	r3, #0
 80001ea:	d0f9      	beq.n	80001e0 <vdg_UART_RxByte+0x8>
		;
	char data = USART2->DR;
 80001ec:	4b04      	ldr	r3, [pc, #16]	@ (8000200 <vdg_UART_RxByte+0x28>)
 80001ee:	685b      	ldr	r3, [r3, #4]
 80001f0:	71fb      	strb	r3, [r7, #7]

	return data;
 80001f2:	79fb      	ldrb	r3, [r7, #7]
}
 80001f4:	4618      	mov	r0, r3
 80001f6:	370c      	adds	r7, #12
 80001f8:	46bd      	mov	sp, r7
 80001fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fe:	4770      	bx	lr
 8000200:	40004400 	.word	0x40004400

08000204 <main>:

int main(void) {
 8000204:	b580      	push	{r7, lr}
 8000206:	b082      	sub	sp, #8
 8000208:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 800020a:	4b8d      	ldr	r3, [pc, #564]	@ (8000440 <main+0x23c>)
 800020c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800020e:	4a8c      	ldr	r2, [pc, #560]	@ (8000440 <main+0x23c>)
 8000210:	f043 0301 	orr.w	r3, r3, #1
 8000214:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 8000216:	4b8a      	ldr	r3, [pc, #552]	@ (8000440 <main+0x23c>)
 8000218:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800021a:	4a89      	ldr	r2, [pc, #548]	@ (8000440 <main+0x23c>)
 800021c:	f043 0308 	orr.w	r3, r3, #8
 8000220:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;
 8000222:	4b87      	ldr	r3, [pc, #540]	@ (8000440 <main+0x23c>)
 8000224:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000226:	4a86      	ldr	r2, [pc, #536]	@ (8000440 <main+0x23c>)
 8000228:	f043 0304 	orr.w	r3, r3, #4
 800022c:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 800022e:	4b84      	ldr	r3, [pc, #528]	@ (8000440 <main+0x23c>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000232:	4a83      	ldr	r2, [pc, #524]	@ (8000440 <main+0x23c>)
 8000234:	f043 0302 	orr.w	r3, r3, #2
 8000238:	6313      	str	r3, [r2, #48]	@ 0x30

	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 800023a:	4b81      	ldr	r3, [pc, #516]	@ (8000440 <main+0x23c>)
 800023c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800023e:	4a80      	ldr	r2, [pc, #512]	@ (8000440 <main+0x23c>)
 8000240:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000244:	6413      	str	r3, [r2, #64]	@ 0x40

	// PA3 (RX only)
	GPIOA->MODER |= (0b10 << GPIO_MODER_MODER3_Pos);
 8000246:	4b7f      	ldr	r3, [pc, #508]	@ (8000444 <main+0x240>)
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	4a7e      	ldr	r2, [pc, #504]	@ (8000444 <main+0x240>)
 800024c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000250:	6013      	str	r3, [r2, #0]
	GPIOA->AFR[0] |= (0b0111 << GPIO_AFRL_AFSEL3_Pos);
 8000252:	4b7c      	ldr	r3, [pc, #496]	@ (8000444 <main+0x240>)
 8000254:	6a1b      	ldr	r3, [r3, #32]
 8000256:	4a7b      	ldr	r2, [pc, #492]	@ (8000444 <main+0x240>)
 8000258:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 800025c:	6213      	str	r3, [r2, #32]

	// PA5 (LED)
	GPIOA->MODER |= (0b01 << GPIO_MODER_MODER5_Pos);
 800025e:	4b79      	ldr	r3, [pc, #484]	@ (8000444 <main+0x240>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	4a78      	ldr	r2, [pc, #480]	@ (8000444 <main+0x240>)
 8000264:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000268:	6013      	str	r3, [r2, #0]
	GPIOC->MODER |= (0b01 << GPIO_MODER_MODER7_Pos);
 800026a:	4b77      	ldr	r3, [pc, #476]	@ (8000448 <main+0x244>)
 800026c:	681b      	ldr	r3, [r3, #0]
 800026e:	4a76      	ldr	r2, [pc, #472]	@ (8000448 <main+0x244>)
 8000270:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000274:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (0b01 << GPIO_MODER_MODER8_Pos);
 8000276:	4b73      	ldr	r3, [pc, #460]	@ (8000444 <main+0x240>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	4a72      	ldr	r2, [pc, #456]	@ (8000444 <main+0x240>)
 800027c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000280:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= (0b01 << GPIO_MODER_MODER10_Pos);
 8000282:	4b72      	ldr	r3, [pc, #456]	@ (800044c <main+0x248>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	4a71      	ldr	r2, [pc, #452]	@ (800044c <main+0x248>)
 8000288:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800028c:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (0b01 << GPIO_MODER_MODER9_Pos); /////
 800028e:	4b6d      	ldr	r3, [pc, #436]	@ (8000444 <main+0x240>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	4a6c      	ldr	r2, [pc, #432]	@ (8000444 <main+0x240>)
 8000294:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8000298:	6013      	str	r3, [r2, #0]

	// USART (RX only)
	USART2->CR1 |= USART_CR1_UE;
 800029a:	4b6d      	ldr	r3, [pc, #436]	@ (8000450 <main+0x24c>)
 800029c:	68db      	ldr	r3, [r3, #12]
 800029e:	4a6c      	ldr	r2, [pc, #432]	@ (8000450 <main+0x24c>)
 80002a0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80002a4:	60d3      	str	r3, [r2, #12]
	USART2->BRR = 139;
 80002a6:	4b6a      	ldr	r3, [pc, #424]	@ (8000450 <main+0x24c>)
 80002a8:	228b      	movs	r2, #139	@ 0x8b
 80002aa:	609a      	str	r2, [r3, #8]
	USART2->CR1 |= USART_CR1_RE;
 80002ac:	4b68      	ldr	r3, [pc, #416]	@ (8000450 <main+0x24c>)
 80002ae:	68db      	ldr	r3, [r3, #12]
 80002b0:	4a67      	ldr	r2, [pc, #412]	@ (8000450 <main+0x24c>)
 80002b2:	f043 0304 	orr.w	r3, r3, #4
 80002b6:	60d3      	str	r3, [r2, #12]

	while (1) {
		char received = vdg_UART_RxByte();
 80002b8:	f7ff ff8e 	bl	80001d8 <vdg_UART_RxByte>
 80002bc:	4603      	mov	r3, r0
 80002be:	71fb      	strb	r3, [r7, #7]

		if (received == '1') { //0001
 80002c0:	79fb      	ldrb	r3, [r7, #7]
 80002c2:	2b31      	cmp	r3, #49	@ 0x31
 80002c4:	d13c      	bne.n	8000340 <main+0x13c>
			GPIOA->ODR &= ~(GPIO_ODR_OD5);
 80002c6:	4b5f      	ldr	r3, [pc, #380]	@ (8000444 <main+0x240>)
 80002c8:	695b      	ldr	r3, [r3, #20]
 80002ca:	4a5e      	ldr	r2, [pc, #376]	@ (8000444 <main+0x240>)
 80002cc:	f023 0320 	bic.w	r3, r3, #32
 80002d0:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 80002d2:	4b5d      	ldr	r3, [pc, #372]	@ (8000448 <main+0x244>)
 80002d4:	695b      	ldr	r3, [r3, #20]
 80002d6:	4a5c      	ldr	r2, [pc, #368]	@ (8000448 <main+0x244>)
 80002d8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80002dc:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 80002de:	4b59      	ldr	r3, [pc, #356]	@ (8000444 <main+0x240>)
 80002e0:	695b      	ldr	r3, [r3, #20]
 80002e2:	4a58      	ldr	r2, [pc, #352]	@ (8000444 <main+0x240>)
 80002e4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80002e8:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 80002ea:	4b58      	ldr	r3, [pc, #352]	@ (800044c <main+0x248>)
 80002ec:	695b      	ldr	r3, [r3, #20]
 80002ee:	4a57      	ldr	r2, [pc, #348]	@ (800044c <main+0x248>)
 80002f0:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80002f4:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 80002f6:	4b53      	ldr	r3, [pc, #332]	@ (8000444 <main+0x240>)
 80002f8:	695b      	ldr	r3, [r3, #20]
 80002fa:	4a52      	ldr	r2, [pc, #328]	@ (8000444 <main+0x240>)
 80002fc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000300:	6153      	str	r3, [r2, #20]

			GPIOA->ODR |= (GPIO_ODR_OD5);
 8000302:	4b50      	ldr	r3, [pc, #320]	@ (8000444 <main+0x240>)
 8000304:	695b      	ldr	r3, [r3, #20]
 8000306:	4a4f      	ldr	r2, [pc, #316]	@ (8000444 <main+0x240>)
 8000308:	f043 0320 	orr.w	r3, r3, #32
 800030c:	6153      	str	r3, [r2, #20]
			GPIOC->ODR |= (GPIO_ODR_OD7);
 800030e:	4b4e      	ldr	r3, [pc, #312]	@ (8000448 <main+0x244>)
 8000310:	695b      	ldr	r3, [r3, #20]
 8000312:	4a4d      	ldr	r2, [pc, #308]	@ (8000448 <main+0x244>)
 8000314:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000318:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 800031a:	4b4a      	ldr	r3, [pc, #296]	@ (8000444 <main+0x240>)
 800031c:	695b      	ldr	r3, [r3, #20]
 800031e:	4a49      	ldr	r2, [pc, #292]	@ (8000444 <main+0x240>)
 8000320:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000324:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 8000326:	4b49      	ldr	r3, [pc, #292]	@ (800044c <main+0x248>)
 8000328:	695b      	ldr	r3, [r3, #20]
 800032a:	4a48      	ldr	r2, [pc, #288]	@ (800044c <main+0x248>)
 800032c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000330:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 8000332:	4b44      	ldr	r3, [pc, #272]	@ (8000444 <main+0x240>)
 8000334:	695b      	ldr	r3, [r3, #20]
 8000336:	4a43      	ldr	r2, [pc, #268]	@ (8000444 <main+0x240>)
 8000338:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800033c:	6153      	str	r3, [r2, #20]
 800033e:	e7bb      	b.n	80002b8 <main+0xb4>
		} else if (received == '2') { //0010
 8000340:	79fb      	ldrb	r3, [r7, #7]
 8000342:	2b32      	cmp	r3, #50	@ 0x32
 8000344:	d13c      	bne.n	80003c0 <main+0x1bc>
			GPIOA->ODR &= ~(GPIO_ODR_OD5);
 8000346:	4b3f      	ldr	r3, [pc, #252]	@ (8000444 <main+0x240>)
 8000348:	695b      	ldr	r3, [r3, #20]
 800034a:	4a3e      	ldr	r2, [pc, #248]	@ (8000444 <main+0x240>)
 800034c:	f023 0320 	bic.w	r3, r3, #32
 8000350:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 8000352:	4b3d      	ldr	r3, [pc, #244]	@ (8000448 <main+0x244>)
 8000354:	695b      	ldr	r3, [r3, #20]
 8000356:	4a3c      	ldr	r2, [pc, #240]	@ (8000448 <main+0x244>)
 8000358:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800035c:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 800035e:	4b39      	ldr	r3, [pc, #228]	@ (8000444 <main+0x240>)
 8000360:	695b      	ldr	r3, [r3, #20]
 8000362:	4a38      	ldr	r2, [pc, #224]	@ (8000444 <main+0x240>)
 8000364:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000368:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 800036a:	4b38      	ldr	r3, [pc, #224]	@ (800044c <main+0x248>)
 800036c:	695b      	ldr	r3, [r3, #20]
 800036e:	4a37      	ldr	r2, [pc, #220]	@ (800044c <main+0x248>)
 8000370:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000374:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 8000376:	4b33      	ldr	r3, [pc, #204]	@ (8000444 <main+0x240>)
 8000378:	695b      	ldr	r3, [r3, #20]
 800037a:	4a32      	ldr	r2, [pc, #200]	@ (8000444 <main+0x240>)
 800037c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000380:	6153      	str	r3, [r2, #20]

			GPIOA->ODR |= (GPIO_ODR_OD5);
 8000382:	4b30      	ldr	r3, [pc, #192]	@ (8000444 <main+0x240>)
 8000384:	695b      	ldr	r3, [r3, #20]
 8000386:	4a2f      	ldr	r2, [pc, #188]	@ (8000444 <main+0x240>)
 8000388:	f043 0320 	orr.w	r3, r3, #32
 800038c:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 800038e:	4b2e      	ldr	r3, [pc, #184]	@ (8000448 <main+0x244>)
 8000390:	695b      	ldr	r3, [r3, #20]
 8000392:	4a2d      	ldr	r2, [pc, #180]	@ (8000448 <main+0x244>)
 8000394:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000398:	6153      	str	r3, [r2, #20]
			GPIOA->ODR |= (GPIO_ODR_OD8);
 800039a:	4b2a      	ldr	r3, [pc, #168]	@ (8000444 <main+0x240>)
 800039c:	695b      	ldr	r3, [r3, #20]
 800039e:	4a29      	ldr	r2, [pc, #164]	@ (8000444 <main+0x240>)
 80003a0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80003a4:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 80003a6:	4b29      	ldr	r3, [pc, #164]	@ (800044c <main+0x248>)
 80003a8:	695b      	ldr	r3, [r3, #20]
 80003aa:	4a28      	ldr	r2, [pc, #160]	@ (800044c <main+0x248>)
 80003ac:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80003b0:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 80003b2:	4b24      	ldr	r3, [pc, #144]	@ (8000444 <main+0x240>)
 80003b4:	695b      	ldr	r3, [r3, #20]
 80003b6:	4a23      	ldr	r2, [pc, #140]	@ (8000444 <main+0x240>)
 80003b8:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80003bc:	6153      	str	r3, [r2, #20]
 80003be:	e77b      	b.n	80002b8 <main+0xb4>
		} else if (received == '3') { //0011
 80003c0:	79fb      	ldrb	r3, [r7, #7]
 80003c2:	2b33      	cmp	r3, #51	@ 0x33
 80003c4:	d146      	bne.n	8000454 <main+0x250>
			GPIOA->ODR &= ~(GPIO_ODR_OD5);
 80003c6:	4b1f      	ldr	r3, [pc, #124]	@ (8000444 <main+0x240>)
 80003c8:	695b      	ldr	r3, [r3, #20]
 80003ca:	4a1e      	ldr	r2, [pc, #120]	@ (8000444 <main+0x240>)
 80003cc:	f023 0320 	bic.w	r3, r3, #32
 80003d0:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 80003d2:	4b1d      	ldr	r3, [pc, #116]	@ (8000448 <main+0x244>)
 80003d4:	695b      	ldr	r3, [r3, #20]
 80003d6:	4a1c      	ldr	r2, [pc, #112]	@ (8000448 <main+0x244>)
 80003d8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80003dc:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 80003de:	4b19      	ldr	r3, [pc, #100]	@ (8000444 <main+0x240>)
 80003e0:	695b      	ldr	r3, [r3, #20]
 80003e2:	4a18      	ldr	r2, [pc, #96]	@ (8000444 <main+0x240>)
 80003e4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80003e8:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 80003ea:	4b18      	ldr	r3, [pc, #96]	@ (800044c <main+0x248>)
 80003ec:	695b      	ldr	r3, [r3, #20]
 80003ee:	4a17      	ldr	r2, [pc, #92]	@ (800044c <main+0x248>)
 80003f0:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80003f4:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 80003f6:	4b13      	ldr	r3, [pc, #76]	@ (8000444 <main+0x240>)
 80003f8:	695b      	ldr	r3, [r3, #20]
 80003fa:	4a12      	ldr	r2, [pc, #72]	@ (8000444 <main+0x240>)
 80003fc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000400:	6153      	str	r3, [r2, #20]

			GPIOA->ODR |= (GPIO_ODR_OD5);
 8000402:	4b10      	ldr	r3, [pc, #64]	@ (8000444 <main+0x240>)
 8000404:	695b      	ldr	r3, [r3, #20]
 8000406:	4a0f      	ldr	r2, [pc, #60]	@ (8000444 <main+0x240>)
 8000408:	f043 0320 	orr.w	r3, r3, #32
 800040c:	6153      	str	r3, [r2, #20]
			GPIOC->ODR |= (GPIO_ODR_OD7);
 800040e:	4b0e      	ldr	r3, [pc, #56]	@ (8000448 <main+0x244>)
 8000410:	695b      	ldr	r3, [r3, #20]
 8000412:	4a0d      	ldr	r2, [pc, #52]	@ (8000448 <main+0x244>)
 8000414:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000418:	6153      	str	r3, [r2, #20]
			GPIOA->ODR |= (GPIO_ODR_OD8);
 800041a:	4b0a      	ldr	r3, [pc, #40]	@ (8000444 <main+0x240>)
 800041c:	695b      	ldr	r3, [r3, #20]
 800041e:	4a09      	ldr	r2, [pc, #36]	@ (8000444 <main+0x240>)
 8000420:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000424:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 8000426:	4b09      	ldr	r3, [pc, #36]	@ (800044c <main+0x248>)
 8000428:	695b      	ldr	r3, [r3, #20]
 800042a:	4a08      	ldr	r2, [pc, #32]	@ (800044c <main+0x248>)
 800042c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000430:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 8000432:	4b04      	ldr	r3, [pc, #16]	@ (8000444 <main+0x240>)
 8000434:	695b      	ldr	r3, [r3, #20]
 8000436:	4a03      	ldr	r2, [pc, #12]	@ (8000444 <main+0x240>)
 8000438:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800043c:	6153      	str	r3, [r2, #20]
 800043e:	e73b      	b.n	80002b8 <main+0xb4>
 8000440:	40023800 	.word	0x40023800
 8000444:	40020000 	.word	0x40020000
 8000448:	40020800 	.word	0x40020800
 800044c:	40020400 	.word	0x40020400
 8000450:	40004400 	.word	0x40004400
		} else if (received == '4') { //0100
 8000454:	79fb      	ldrb	r3, [r7, #7]
 8000456:	2b34      	cmp	r3, #52	@ 0x34
 8000458:	d13c      	bne.n	80004d4 <main+0x2d0>
			GPIOA->ODR &= ~(GPIO_ODR_OD5);
 800045a:	4b7e      	ldr	r3, [pc, #504]	@ (8000654 <main+0x450>)
 800045c:	695b      	ldr	r3, [r3, #20]
 800045e:	4a7d      	ldr	r2, [pc, #500]	@ (8000654 <main+0x450>)
 8000460:	f023 0320 	bic.w	r3, r3, #32
 8000464:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 8000466:	4b7c      	ldr	r3, [pc, #496]	@ (8000658 <main+0x454>)
 8000468:	695b      	ldr	r3, [r3, #20]
 800046a:	4a7b      	ldr	r2, [pc, #492]	@ (8000658 <main+0x454>)
 800046c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000470:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 8000472:	4b78      	ldr	r3, [pc, #480]	@ (8000654 <main+0x450>)
 8000474:	695b      	ldr	r3, [r3, #20]
 8000476:	4a77      	ldr	r2, [pc, #476]	@ (8000654 <main+0x450>)
 8000478:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800047c:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 800047e:	4b77      	ldr	r3, [pc, #476]	@ (800065c <main+0x458>)
 8000480:	695b      	ldr	r3, [r3, #20]
 8000482:	4a76      	ldr	r2, [pc, #472]	@ (800065c <main+0x458>)
 8000484:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000488:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 800048a:	4b72      	ldr	r3, [pc, #456]	@ (8000654 <main+0x450>)
 800048c:	695b      	ldr	r3, [r3, #20]
 800048e:	4a71      	ldr	r2, [pc, #452]	@ (8000654 <main+0x450>)
 8000490:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000494:	6153      	str	r3, [r2, #20]

			GPIOA->ODR |= (GPIO_ODR_OD5);
 8000496:	4b6f      	ldr	r3, [pc, #444]	@ (8000654 <main+0x450>)
 8000498:	695b      	ldr	r3, [r3, #20]
 800049a:	4a6e      	ldr	r2, [pc, #440]	@ (8000654 <main+0x450>)
 800049c:	f043 0320 	orr.w	r3, r3, #32
 80004a0:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 80004a2:	4b6d      	ldr	r3, [pc, #436]	@ (8000658 <main+0x454>)
 80004a4:	695b      	ldr	r3, [r3, #20]
 80004a6:	4a6c      	ldr	r2, [pc, #432]	@ (8000658 <main+0x454>)
 80004a8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80004ac:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 80004ae:	4b69      	ldr	r3, [pc, #420]	@ (8000654 <main+0x450>)
 80004b0:	695b      	ldr	r3, [r3, #20]
 80004b2:	4a68      	ldr	r2, [pc, #416]	@ (8000654 <main+0x450>)
 80004b4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80004b8:	6153      	str	r3, [r2, #20]
			GPIOB->ODR |= (GPIO_ODR_OD10);
 80004ba:	4b68      	ldr	r3, [pc, #416]	@ (800065c <main+0x458>)
 80004bc:	695b      	ldr	r3, [r3, #20]
 80004be:	4a67      	ldr	r2, [pc, #412]	@ (800065c <main+0x458>)
 80004c0:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80004c4:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 80004c6:	4b63      	ldr	r3, [pc, #396]	@ (8000654 <main+0x450>)
 80004c8:	695b      	ldr	r3, [r3, #20]
 80004ca:	4a62      	ldr	r2, [pc, #392]	@ (8000654 <main+0x450>)
 80004cc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80004d0:	6153      	str	r3, [r2, #20]
 80004d2:	e6f1      	b.n	80002b8 <main+0xb4>
		} else if (received == '5') { //0101
 80004d4:	79fb      	ldrb	r3, [r7, #7]
 80004d6:	2b35      	cmp	r3, #53	@ 0x35
 80004d8:	d13c      	bne.n	8000554 <main+0x350>
			GPIOA->ODR &= ~(GPIO_ODR_OD5);
 80004da:	4b5e      	ldr	r3, [pc, #376]	@ (8000654 <main+0x450>)
 80004dc:	695b      	ldr	r3, [r3, #20]
 80004de:	4a5d      	ldr	r2, [pc, #372]	@ (8000654 <main+0x450>)
 80004e0:	f023 0320 	bic.w	r3, r3, #32
 80004e4:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 80004e6:	4b5c      	ldr	r3, [pc, #368]	@ (8000658 <main+0x454>)
 80004e8:	695b      	ldr	r3, [r3, #20]
 80004ea:	4a5b      	ldr	r2, [pc, #364]	@ (8000658 <main+0x454>)
 80004ec:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80004f0:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 80004f2:	4b58      	ldr	r3, [pc, #352]	@ (8000654 <main+0x450>)
 80004f4:	695b      	ldr	r3, [r3, #20]
 80004f6:	4a57      	ldr	r2, [pc, #348]	@ (8000654 <main+0x450>)
 80004f8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80004fc:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 80004fe:	4b57      	ldr	r3, [pc, #348]	@ (800065c <main+0x458>)
 8000500:	695b      	ldr	r3, [r3, #20]
 8000502:	4a56      	ldr	r2, [pc, #344]	@ (800065c <main+0x458>)
 8000504:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000508:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 800050a:	4b52      	ldr	r3, [pc, #328]	@ (8000654 <main+0x450>)
 800050c:	695b      	ldr	r3, [r3, #20]
 800050e:	4a51      	ldr	r2, [pc, #324]	@ (8000654 <main+0x450>)
 8000510:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000514:	6153      	str	r3, [r2, #20]

			GPIOA->ODR |= (GPIO_ODR_OD5);
 8000516:	4b4f      	ldr	r3, [pc, #316]	@ (8000654 <main+0x450>)
 8000518:	695b      	ldr	r3, [r3, #20]
 800051a:	4a4e      	ldr	r2, [pc, #312]	@ (8000654 <main+0x450>)
 800051c:	f043 0320 	orr.w	r3, r3, #32
 8000520:	6153      	str	r3, [r2, #20]
			GPIOC->ODR |= (GPIO_ODR_OD7);
 8000522:	4b4d      	ldr	r3, [pc, #308]	@ (8000658 <main+0x454>)
 8000524:	695b      	ldr	r3, [r3, #20]
 8000526:	4a4c      	ldr	r2, [pc, #304]	@ (8000658 <main+0x454>)
 8000528:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800052c:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 800052e:	4b49      	ldr	r3, [pc, #292]	@ (8000654 <main+0x450>)
 8000530:	695b      	ldr	r3, [r3, #20]
 8000532:	4a48      	ldr	r2, [pc, #288]	@ (8000654 <main+0x450>)
 8000534:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000538:	6153      	str	r3, [r2, #20]
			GPIOB->ODR |= (GPIO_ODR_OD10);
 800053a:	4b48      	ldr	r3, [pc, #288]	@ (800065c <main+0x458>)
 800053c:	695b      	ldr	r3, [r3, #20]
 800053e:	4a47      	ldr	r2, [pc, #284]	@ (800065c <main+0x458>)
 8000540:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000544:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 8000546:	4b43      	ldr	r3, [pc, #268]	@ (8000654 <main+0x450>)
 8000548:	695b      	ldr	r3, [r3, #20]
 800054a:	4a42      	ldr	r2, [pc, #264]	@ (8000654 <main+0x450>)
 800054c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000550:	6153      	str	r3, [r2, #20]
 8000552:	e6b1      	b.n	80002b8 <main+0xb4>
		} else if (received == '6') { //0110
 8000554:	79fb      	ldrb	r3, [r7, #7]
 8000556:	2b36      	cmp	r3, #54	@ 0x36
 8000558:	d13c      	bne.n	80005d4 <main+0x3d0>
			GPIOA->ODR &= ~(GPIO_ODR_OD5);
 800055a:	4b3e      	ldr	r3, [pc, #248]	@ (8000654 <main+0x450>)
 800055c:	695b      	ldr	r3, [r3, #20]
 800055e:	4a3d      	ldr	r2, [pc, #244]	@ (8000654 <main+0x450>)
 8000560:	f023 0320 	bic.w	r3, r3, #32
 8000564:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 8000566:	4b3c      	ldr	r3, [pc, #240]	@ (8000658 <main+0x454>)
 8000568:	695b      	ldr	r3, [r3, #20]
 800056a:	4a3b      	ldr	r2, [pc, #236]	@ (8000658 <main+0x454>)
 800056c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000570:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 8000572:	4b38      	ldr	r3, [pc, #224]	@ (8000654 <main+0x450>)
 8000574:	695b      	ldr	r3, [r3, #20]
 8000576:	4a37      	ldr	r2, [pc, #220]	@ (8000654 <main+0x450>)
 8000578:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800057c:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 800057e:	4b37      	ldr	r3, [pc, #220]	@ (800065c <main+0x458>)
 8000580:	695b      	ldr	r3, [r3, #20]
 8000582:	4a36      	ldr	r2, [pc, #216]	@ (800065c <main+0x458>)
 8000584:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000588:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 800058a:	4b32      	ldr	r3, [pc, #200]	@ (8000654 <main+0x450>)
 800058c:	695b      	ldr	r3, [r3, #20]
 800058e:	4a31      	ldr	r2, [pc, #196]	@ (8000654 <main+0x450>)
 8000590:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000594:	6153      	str	r3, [r2, #20]

			GPIOA->ODR |= (GPIO_ODR_OD5);
 8000596:	4b2f      	ldr	r3, [pc, #188]	@ (8000654 <main+0x450>)
 8000598:	695b      	ldr	r3, [r3, #20]
 800059a:	4a2e      	ldr	r2, [pc, #184]	@ (8000654 <main+0x450>)
 800059c:	f043 0320 	orr.w	r3, r3, #32
 80005a0:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 80005a2:	4b2d      	ldr	r3, [pc, #180]	@ (8000658 <main+0x454>)
 80005a4:	695b      	ldr	r3, [r3, #20]
 80005a6:	4a2c      	ldr	r2, [pc, #176]	@ (8000658 <main+0x454>)
 80005a8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80005ac:	6153      	str	r3, [r2, #20]
			GPIOA->ODR |= (GPIO_ODR_OD8);
 80005ae:	4b29      	ldr	r3, [pc, #164]	@ (8000654 <main+0x450>)
 80005b0:	695b      	ldr	r3, [r3, #20]
 80005b2:	4a28      	ldr	r2, [pc, #160]	@ (8000654 <main+0x450>)
 80005b4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80005b8:	6153      	str	r3, [r2, #20]
			GPIOB->ODR |= (GPIO_ODR_OD10);
 80005ba:	4b28      	ldr	r3, [pc, #160]	@ (800065c <main+0x458>)
 80005bc:	695b      	ldr	r3, [r3, #20]
 80005be:	4a27      	ldr	r2, [pc, #156]	@ (800065c <main+0x458>)
 80005c0:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80005c4:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 80005c6:	4b23      	ldr	r3, [pc, #140]	@ (8000654 <main+0x450>)
 80005c8:	695b      	ldr	r3, [r3, #20]
 80005ca:	4a22      	ldr	r2, [pc, #136]	@ (8000654 <main+0x450>)
 80005cc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80005d0:	6153      	str	r3, [r2, #20]
 80005d2:	e671      	b.n	80002b8 <main+0xb4>
		} else if (received == '7') { //0111
 80005d4:	79fb      	ldrb	r3, [r7, #7]
 80005d6:	2b37      	cmp	r3, #55	@ 0x37
 80005d8:	d142      	bne.n	8000660 <main+0x45c>
			GPIOA->ODR &= ~(GPIO_ODR_OD5);
 80005da:	4b1e      	ldr	r3, [pc, #120]	@ (8000654 <main+0x450>)
 80005dc:	695b      	ldr	r3, [r3, #20]
 80005de:	4a1d      	ldr	r2, [pc, #116]	@ (8000654 <main+0x450>)
 80005e0:	f023 0320 	bic.w	r3, r3, #32
 80005e4:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 80005e6:	4b1c      	ldr	r3, [pc, #112]	@ (8000658 <main+0x454>)
 80005e8:	695b      	ldr	r3, [r3, #20]
 80005ea:	4a1b      	ldr	r2, [pc, #108]	@ (8000658 <main+0x454>)
 80005ec:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80005f0:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 80005f2:	4b18      	ldr	r3, [pc, #96]	@ (8000654 <main+0x450>)
 80005f4:	695b      	ldr	r3, [r3, #20]
 80005f6:	4a17      	ldr	r2, [pc, #92]	@ (8000654 <main+0x450>)
 80005f8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80005fc:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 80005fe:	4b17      	ldr	r3, [pc, #92]	@ (800065c <main+0x458>)
 8000600:	695b      	ldr	r3, [r3, #20]
 8000602:	4a16      	ldr	r2, [pc, #88]	@ (800065c <main+0x458>)
 8000604:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000608:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 800060a:	4b12      	ldr	r3, [pc, #72]	@ (8000654 <main+0x450>)
 800060c:	695b      	ldr	r3, [r3, #20]
 800060e:	4a11      	ldr	r2, [pc, #68]	@ (8000654 <main+0x450>)
 8000610:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000614:	6153      	str	r3, [r2, #20]

			GPIOA->ODR |= (GPIO_ODR_OD5);
 8000616:	4b0f      	ldr	r3, [pc, #60]	@ (8000654 <main+0x450>)
 8000618:	695b      	ldr	r3, [r3, #20]
 800061a:	4a0e      	ldr	r2, [pc, #56]	@ (8000654 <main+0x450>)
 800061c:	f043 0320 	orr.w	r3, r3, #32
 8000620:	6153      	str	r3, [r2, #20]
			GPIOC->ODR |= (GPIO_ODR_OD7);
 8000622:	4b0d      	ldr	r3, [pc, #52]	@ (8000658 <main+0x454>)
 8000624:	695b      	ldr	r3, [r3, #20]
 8000626:	4a0c      	ldr	r2, [pc, #48]	@ (8000658 <main+0x454>)
 8000628:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800062c:	6153      	str	r3, [r2, #20]
			GPIOA->ODR |= (GPIO_ODR_OD8);
 800062e:	4b09      	ldr	r3, [pc, #36]	@ (8000654 <main+0x450>)
 8000630:	695b      	ldr	r3, [r3, #20]
 8000632:	4a08      	ldr	r2, [pc, #32]	@ (8000654 <main+0x450>)
 8000634:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000638:	6153      	str	r3, [r2, #20]
			GPIOB->ODR |= (GPIO_ODR_OD10);
 800063a:	4b08      	ldr	r3, [pc, #32]	@ (800065c <main+0x458>)
 800063c:	695b      	ldr	r3, [r3, #20]
 800063e:	4a07      	ldr	r2, [pc, #28]	@ (800065c <main+0x458>)
 8000640:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000644:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 8000646:	4b03      	ldr	r3, [pc, #12]	@ (8000654 <main+0x450>)
 8000648:	695b      	ldr	r3, [r3, #20]
 800064a:	4a02      	ldr	r2, [pc, #8]	@ (8000654 <main+0x450>)
 800064c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000650:	6153      	str	r3, [r2, #20]
 8000652:	e631      	b.n	80002b8 <main+0xb4>
 8000654:	40020000 	.word	0x40020000
 8000658:	40020800 	.word	0x40020800
 800065c:	40020400 	.word	0x40020400
		} else if (received == '8') { //1000
 8000660:	79fb      	ldrb	r3, [r7, #7]
 8000662:	2b38      	cmp	r3, #56	@ 0x38
 8000664:	d13c      	bne.n	80006e0 <main+0x4dc>
			GPIOA->ODR &= ~(GPIO_ODR_OD5);
 8000666:	4b4e      	ldr	r3, [pc, #312]	@ (80007a0 <main+0x59c>)
 8000668:	695b      	ldr	r3, [r3, #20]
 800066a:	4a4d      	ldr	r2, [pc, #308]	@ (80007a0 <main+0x59c>)
 800066c:	f023 0320 	bic.w	r3, r3, #32
 8000670:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 8000672:	4b4c      	ldr	r3, [pc, #304]	@ (80007a4 <main+0x5a0>)
 8000674:	695b      	ldr	r3, [r3, #20]
 8000676:	4a4b      	ldr	r2, [pc, #300]	@ (80007a4 <main+0x5a0>)
 8000678:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800067c:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 800067e:	4b48      	ldr	r3, [pc, #288]	@ (80007a0 <main+0x59c>)
 8000680:	695b      	ldr	r3, [r3, #20]
 8000682:	4a47      	ldr	r2, [pc, #284]	@ (80007a0 <main+0x59c>)
 8000684:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000688:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 800068a:	4b47      	ldr	r3, [pc, #284]	@ (80007a8 <main+0x5a4>)
 800068c:	695b      	ldr	r3, [r3, #20]
 800068e:	4a46      	ldr	r2, [pc, #280]	@ (80007a8 <main+0x5a4>)
 8000690:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000694:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 8000696:	4b42      	ldr	r3, [pc, #264]	@ (80007a0 <main+0x59c>)
 8000698:	695b      	ldr	r3, [r3, #20]
 800069a:	4a41      	ldr	r2, [pc, #260]	@ (80007a0 <main+0x59c>)
 800069c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80006a0:	6153      	str	r3, [r2, #20]

			GPIOA->ODR |= (GPIO_ODR_OD5);
 80006a2:	4b3f      	ldr	r3, [pc, #252]	@ (80007a0 <main+0x59c>)
 80006a4:	695b      	ldr	r3, [r3, #20]
 80006a6:	4a3e      	ldr	r2, [pc, #248]	@ (80007a0 <main+0x59c>)
 80006a8:	f043 0320 	orr.w	r3, r3, #32
 80006ac:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 80006ae:	4b3d      	ldr	r3, [pc, #244]	@ (80007a4 <main+0x5a0>)
 80006b0:	695b      	ldr	r3, [r3, #20]
 80006b2:	4a3c      	ldr	r2, [pc, #240]	@ (80007a4 <main+0x5a0>)
 80006b4:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80006b8:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 80006ba:	4b39      	ldr	r3, [pc, #228]	@ (80007a0 <main+0x59c>)
 80006bc:	695b      	ldr	r3, [r3, #20]
 80006be:	4a38      	ldr	r2, [pc, #224]	@ (80007a0 <main+0x59c>)
 80006c0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80006c4:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 80006c6:	4b38      	ldr	r3, [pc, #224]	@ (80007a8 <main+0x5a4>)
 80006c8:	695b      	ldr	r3, [r3, #20]
 80006ca:	4a37      	ldr	r2, [pc, #220]	@ (80007a8 <main+0x5a4>)
 80006cc:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80006d0:	6153      	str	r3, [r2, #20]
			GPIOA->ODR |= (GPIO_ODR_OD9);
 80006d2:	4b33      	ldr	r3, [pc, #204]	@ (80007a0 <main+0x59c>)
 80006d4:	695b      	ldr	r3, [r3, #20]
 80006d6:	4a32      	ldr	r2, [pc, #200]	@ (80007a0 <main+0x59c>)
 80006d8:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80006dc:	6153      	str	r3, [r2, #20]
 80006de:	e5eb      	b.n	80002b8 <main+0xb4>
		} else if (received == '9') { //1001
 80006e0:	79fb      	ldrb	r3, [r7, #7]
 80006e2:	2b39      	cmp	r3, #57	@ 0x39
 80006e4:	d13c      	bne.n	8000760 <main+0x55c>
			GPIOA->ODR &= ~(GPIO_ODR_OD5);
 80006e6:	4b2e      	ldr	r3, [pc, #184]	@ (80007a0 <main+0x59c>)
 80006e8:	695b      	ldr	r3, [r3, #20]
 80006ea:	4a2d      	ldr	r2, [pc, #180]	@ (80007a0 <main+0x59c>)
 80006ec:	f023 0320 	bic.w	r3, r3, #32
 80006f0:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 80006f2:	4b2c      	ldr	r3, [pc, #176]	@ (80007a4 <main+0x5a0>)
 80006f4:	695b      	ldr	r3, [r3, #20]
 80006f6:	4a2b      	ldr	r2, [pc, #172]	@ (80007a4 <main+0x5a0>)
 80006f8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80006fc:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 80006fe:	4b28      	ldr	r3, [pc, #160]	@ (80007a0 <main+0x59c>)
 8000700:	695b      	ldr	r3, [r3, #20]
 8000702:	4a27      	ldr	r2, [pc, #156]	@ (80007a0 <main+0x59c>)
 8000704:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000708:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 800070a:	4b27      	ldr	r3, [pc, #156]	@ (80007a8 <main+0x5a4>)
 800070c:	695b      	ldr	r3, [r3, #20]
 800070e:	4a26      	ldr	r2, [pc, #152]	@ (80007a8 <main+0x5a4>)
 8000710:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000714:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 8000716:	4b22      	ldr	r3, [pc, #136]	@ (80007a0 <main+0x59c>)
 8000718:	695b      	ldr	r3, [r3, #20]
 800071a:	4a21      	ldr	r2, [pc, #132]	@ (80007a0 <main+0x59c>)
 800071c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000720:	6153      	str	r3, [r2, #20]

			GPIOA->ODR |= (GPIO_ODR_OD5);
 8000722:	4b1f      	ldr	r3, [pc, #124]	@ (80007a0 <main+0x59c>)
 8000724:	695b      	ldr	r3, [r3, #20]
 8000726:	4a1e      	ldr	r2, [pc, #120]	@ (80007a0 <main+0x59c>)
 8000728:	f043 0320 	orr.w	r3, r3, #32
 800072c:	6153      	str	r3, [r2, #20]
			GPIOC->ODR |= (GPIO_ODR_OD7);
 800072e:	4b1d      	ldr	r3, [pc, #116]	@ (80007a4 <main+0x5a0>)
 8000730:	695b      	ldr	r3, [r3, #20]
 8000732:	4a1c      	ldr	r2, [pc, #112]	@ (80007a4 <main+0x5a0>)
 8000734:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000738:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 800073a:	4b19      	ldr	r3, [pc, #100]	@ (80007a0 <main+0x59c>)
 800073c:	695b      	ldr	r3, [r3, #20]
 800073e:	4a18      	ldr	r2, [pc, #96]	@ (80007a0 <main+0x59c>)
 8000740:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000744:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 8000746:	4b18      	ldr	r3, [pc, #96]	@ (80007a8 <main+0x5a4>)
 8000748:	695b      	ldr	r3, [r3, #20]
 800074a:	4a17      	ldr	r2, [pc, #92]	@ (80007a8 <main+0x5a4>)
 800074c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000750:	6153      	str	r3, [r2, #20]
			GPIOA->ODR |= (GPIO_ODR_OD9);
 8000752:	4b13      	ldr	r3, [pc, #76]	@ (80007a0 <main+0x59c>)
 8000754:	695b      	ldr	r3, [r3, #20]
 8000756:	4a12      	ldr	r2, [pc, #72]	@ (80007a0 <main+0x59c>)
 8000758:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800075c:	6153      	str	r3, [r2, #20]
 800075e:	e5ab      	b.n	80002b8 <main+0xb4>
		} else {
			GPIOA->ODR &= ~(GPIO_ODR_OD5);
 8000760:	4b0f      	ldr	r3, [pc, #60]	@ (80007a0 <main+0x59c>)
 8000762:	695b      	ldr	r3, [r3, #20]
 8000764:	4a0e      	ldr	r2, [pc, #56]	@ (80007a0 <main+0x59c>)
 8000766:	f023 0320 	bic.w	r3, r3, #32
 800076a:	6153      	str	r3, [r2, #20]
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
 800076c:	4b0d      	ldr	r3, [pc, #52]	@ (80007a4 <main+0x5a0>)
 800076e:	695b      	ldr	r3, [r3, #20]
 8000770:	4a0c      	ldr	r2, [pc, #48]	@ (80007a4 <main+0x5a0>)
 8000772:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000776:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
 8000778:	4b09      	ldr	r3, [pc, #36]	@ (80007a0 <main+0x59c>)
 800077a:	695b      	ldr	r3, [r3, #20]
 800077c:	4a08      	ldr	r2, [pc, #32]	@ (80007a0 <main+0x59c>)
 800077e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000782:	6153      	str	r3, [r2, #20]
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
 8000784:	4b08      	ldr	r3, [pc, #32]	@ (80007a8 <main+0x5a4>)
 8000786:	695b      	ldr	r3, [r3, #20]
 8000788:	4a07      	ldr	r2, [pc, #28]	@ (80007a8 <main+0x5a4>)
 800078a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800078e:	6153      	str	r3, [r2, #20]
			GPIOA->ODR &= ~(GPIO_ODR_OD9);
 8000790:	4b03      	ldr	r3, [pc, #12]	@ (80007a0 <main+0x59c>)
 8000792:	695b      	ldr	r3, [r3, #20]
 8000794:	4a02      	ldr	r2, [pc, #8]	@ (80007a0 <main+0x59c>)
 8000796:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800079a:	6153      	str	r3, [r2, #20]
	while (1) {
 800079c:	e58c      	b.n	80002b8 <main+0xb4>
 800079e:	bf00      	nop
 80007a0:	40020000 	.word	0x40020000
 80007a4:	40020800 	.word	0x40020800
 80007a8:	40020400 	.word	0x40020400

080007ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80007ac:	480d      	ldr	r0, [pc, #52]	@ (80007e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80007ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80007b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80007b4:	480c      	ldr	r0, [pc, #48]	@ (80007e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80007b6:	490d      	ldr	r1, [pc, #52]	@ (80007ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80007b8:	4a0d      	ldr	r2, [pc, #52]	@ (80007f0 <LoopForever+0xe>)
  movs r3, #0
 80007ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007bc:	e002      	b.n	80007c4 <LoopCopyDataInit>

080007be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007c2:	3304      	adds	r3, #4

080007c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80007c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80007c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80007c8:	d3f9      	bcc.n	80007be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80007ca:	4a0a      	ldr	r2, [pc, #40]	@ (80007f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80007cc:	4c0a      	ldr	r4, [pc, #40]	@ (80007f8 <LoopForever+0x16>)
  movs r3, #0
 80007ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007d0:	e001      	b.n	80007d6 <LoopFillZerobss>

080007d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007d4:	3204      	adds	r2, #4

080007d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007d8:	d3fb      	bcc.n	80007d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80007da:	f000 f811 	bl	8000800 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80007de:	f7ff fd11 	bl	8000204 <main>

080007e2 <LoopForever>:

LoopForever:
  b LoopForever
 80007e2:	e7fe      	b.n	80007e2 <LoopForever>
  ldr   r0, =_estack
 80007e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80007e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007ec:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80007f0:	08000868 	.word	0x08000868
  ldr r2, =_sbss
 80007f4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80007f8:	2000001c 	.word	0x2000001c

080007fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80007fc:	e7fe      	b.n	80007fc <ADC_IRQHandler>
	...

08000800 <__libc_init_array>:
 8000800:	b570      	push	{r4, r5, r6, lr}
 8000802:	4d0d      	ldr	r5, [pc, #52]	@ (8000838 <__libc_init_array+0x38>)
 8000804:	4c0d      	ldr	r4, [pc, #52]	@ (800083c <__libc_init_array+0x3c>)
 8000806:	1b64      	subs	r4, r4, r5
 8000808:	10a4      	asrs	r4, r4, #2
 800080a:	2600      	movs	r6, #0
 800080c:	42a6      	cmp	r6, r4
 800080e:	d109      	bne.n	8000824 <__libc_init_array+0x24>
 8000810:	4d0b      	ldr	r5, [pc, #44]	@ (8000840 <__libc_init_array+0x40>)
 8000812:	4c0c      	ldr	r4, [pc, #48]	@ (8000844 <__libc_init_array+0x44>)
 8000814:	f000 f818 	bl	8000848 <_init>
 8000818:	1b64      	subs	r4, r4, r5
 800081a:	10a4      	asrs	r4, r4, #2
 800081c:	2600      	movs	r6, #0
 800081e:	42a6      	cmp	r6, r4
 8000820:	d105      	bne.n	800082e <__libc_init_array+0x2e>
 8000822:	bd70      	pop	{r4, r5, r6, pc}
 8000824:	f855 3b04 	ldr.w	r3, [r5], #4
 8000828:	4798      	blx	r3
 800082a:	3601      	adds	r6, #1
 800082c:	e7ee      	b.n	800080c <__libc_init_array+0xc>
 800082e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000832:	4798      	blx	r3
 8000834:	3601      	adds	r6, #1
 8000836:	e7f2      	b.n	800081e <__libc_init_array+0x1e>
 8000838:	08000860 	.word	0x08000860
 800083c:	08000860 	.word	0x08000860
 8000840:	08000860 	.word	0x08000860
 8000844:	08000864 	.word	0x08000864

08000848 <_init>:
 8000848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800084a:	bf00      	nop
 800084c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800084e:	bc08      	pop	{r3}
 8000850:	469e      	mov	lr, r3
 8000852:	4770      	bx	lr

08000854 <_fini>:
 8000854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000856:	bf00      	nop
 8000858:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800085a:	bc08      	pop	{r3}
 800085c:	469e      	mov	lr, r3
 800085e:	4770      	bx	lr
