#include <stdint.h>
#define STM32F411xE
#include "stm32f4xx.h"

char vdg_UART_RxByte(void) {
	while ((USART2->SR & USART_SR_RXNE) == 0)
		;
	return USART2->DR;
}

int main(void) {
	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;

	GPIOA->MODER &= ~(GPIO_MODER_MODER3);
	GPIOA->MODER |= (0b10 << GPIO_MODER_MODER3_Pos);
	GPIOA->AFR[0] &= ~(GPIO_AFRL_AFRL3);
	GPIOA->AFR[0] |= (0b0111 << GPIO_AFRL_AFSEL3_Pos);

	GPIOA->MODER &= ~(GPIO_MODER_MODER5);
	GPIOA->MODER |= (0b01 << GPIO_MODER_MODER5_Pos);
	GPIOC->MODER &= ~(GPIO_MODER_MODER7);
	GPIOC->MODER |= (0b01 << GPIO_MODER_MODER7_Pos);
	GPIOA->MODER &= ~(GPIO_MODER_MODER8);
	GPIOA->MODER |= (0b01 << GPIO_MODER_MODER8_Pos);
	GPIOB->MODER &= ~(GPIO_MODER_MODER10);
	GPIOB->MODER |= (0b01 << GPIO_MODER_MODER10_Pos);
	GPIOB->MODER &= ~(GPIO_MODER_MODER9);
	GPIOB->MODER |= (0b01 << GPIO_MODER_MODER9_Pos);

	USART2->CR1 |= USART_CR1_UE;
	USART2->BRR = 139;
	USART2->CR1 |= USART_CR1_RE;

	while (1) {
		if (vdg_UART_RxByte() == '1') {
			GPIOA->ODR |= (GPIO_ODR_OD5);    // LED เปิด
			GPIOC->ODR |= (GPIO_ODR_OD7);    // A=1
			GPIOA->ODR &= ~(GPIO_ODR_OD8);   // B=0 (แก้ไข)
			GPIOB->ODR &= ~(GPIO_ODR_OD10);  // C=0
			GPIOB->ODR &= ~(GPIO_ODR_OD9);   // D=0
		} else {
			GPIOA->ODR &= ~(GPIO_ODR_OD5);
			GPIOC->ODR &= ~(GPIO_ODR_OD7);
			GPIOA->ODR &= ~(GPIO_ODR_OD8);
			GPIOB->ODR &= ~(GPIO_ODR_OD10);
			GPIOB->ODR &= ~(GPIO_ODR_OD9);
		}
	}
}
