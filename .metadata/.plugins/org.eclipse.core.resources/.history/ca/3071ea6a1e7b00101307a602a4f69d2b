#include <stdint.h>
#define STM32F411xE
#include "stm32f4xx.h"

char vdg_UART_RxByte() {
    while((USART2->SR & USART_SR_RXNE) == 0);
    return USART2->DR;
}

int main(void) {
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;

    // PA3 (RX only)
    GPIOA->MODER |= (0b10 << GPIO_MODER_MODER3_Pos);
    GPIOA->AFR[0] |= (0b0111 << GPIO_AFRL_AFSEL3_Pos);

    // PA5 (LED)
    GPIOA->MODER |= (0b01 << GPIO_MODER_MODER5_Pos);
    GPIOD->MODER |= (0b01 << GPIO_MODER_MODER9_Pos);
    GPIOD->MODER |= (0b01 << GPIO_MODER_MODER7_Pos);
    GPIOD->MODER |= (0b01 << GPIO_MODER_MODER6_Pos);
    GPIOD->MODER |= (0b01 << GPIO_MODER_MODER8_Pos);

    // USART (RX only)
    USART2->CR1 |= USART_CR1_UE;
    USART2->BRR = 139;
    USART2->CR1 |= USART_CR1_RE;

    while(1) {
        if (vdg_UART_RxByte() == '1'){
            GPIOA->ODR |= (GPIO_ODR_OD5);
            GPIOD->ODR = (GPIOD->ODR & 0xFC3F) | (1 << 6);
        } else {
            GPIOA->ODR &= ~(GPIO_ODR_OD5);
        }
    }
    return 0;
}
